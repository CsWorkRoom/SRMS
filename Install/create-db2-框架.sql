--添加字段
ALTER TABLE BF_DEPARTMENT ADD DEPT_FLAG INT DEFAULT 0;

ALTER TABLE BF_ST_FLOW ADD OFFSET INT DEFAULT 0;
ALTER TABLE BF_ST_FLOW ADD PARAMETERS CLOB;

ALTER TABLE BF_ST_TASK ADD BEGIN_DATE TIMESTAMP;
ALTER TABLE BF_ST_TASK ADD END_DATE TIMESTAMP;
ALTER TABLE BF_ST_TASK ADD PARAMETER VARCHAR(1024);

ALTER TABLE BF_ST_TASK_FLOW_NODE ADD BEGIN_DATE TIMESTAMP;
ALTER TABLE BF_ST_TASK_FLOW_NODE ADD END_DATE TIMESTAMP;
ALTER TABLE BF_ST_TASK_FLOW_NODE ADD PARAMETER VARCHAR(1024);

ALTER TABLE BF_FORM ADD JS_CODE CLOB;

ALTER TABLE BF_USER ADD FLAG_1 SMALLINT DEFAULT 0 NOT NULL;
ALTER TABLE BF_USER ADD FLAG_2 SMALLINT DEFAULT 0 NOT NULL;
ALTER TABLE BF_USER ADD FLAG_3 SMALLINT DEFAULT 0 NOT NULL;
ALTER TABLE BF_USER ADD EXTEND_1 VARCHAR(256);
ALTER TABLE BF_USER ADD EXTEND_2 VARCHAR(256);
ALTER TABLE BF_USER ADD EXTEND_3 VARCHAR(256);

-- DROP TABLE BF_BULLETIN;
CREATE TABLE BF_BULLETIN (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TITLE VARCHAR(256) NOT NULL ,
   SUMMARY VARCHAR(1024) NOT NULL ,
   CONTENT CLOB NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   RECV_DEPT_IDS VARCHAR(1024),
   RECV_ROLE_IDS VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_BULLETIN IS '公告管理';
COMMENT ON COLUMN BF_BULLETIN.ID IS 'ID ';
COMMENT ON COLUMN BF_BULLETIN.TITLE IS '标题';
COMMENT ON COLUMN BF_BULLETIN.SUMMARY IS '摘要';
COMMENT ON COLUMN BF_BULLETIN.CONTENT IS '脚本内容';
COMMENT ON COLUMN BF_BULLETIN.IS_ENABLE IS '是否启用（未启用的情况下，不可见公告内容）';
COMMENT ON COLUMN BF_BULLETIN.RECV_DEPT_IDS IS '接收公告的部门ID（多个ID逗号分隔，用于编辑时回显）';
COMMENT ON COLUMN BF_BULLETIN.RECV_ROLE_IDS IS '接收公告的角色ID（多个ID逗号分隔，用于编辑时回显）';
COMMENT ON COLUMN BF_BULLETIN.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_BULLETIN.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_BULLETIN.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_BULLETIN.UPDATE_TIME IS '修改时间';
------------------------------------------------


-- DROP TABLE BF_BULLETIN_ATTACH;
CREATE TABLE BF_BULLETIN_ATTACH (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   BULL_ID INT NOT NULL ,
   FILE_PATH VARCHAR(1024) NOT NULL 
);
COMMENT ON TABLE BF_BULLETIN_ATTACH IS '公告附件';
COMMENT ON COLUMN BF_BULLETIN_ATTACH.ID IS 'ID ';
COMMENT ON COLUMN BF_BULLETIN_ATTACH.BULL_ID IS '公告ID';
COMMENT ON COLUMN BF_BULLETIN_ATTACH.FILE_PATH IS '附件路径';
CREATE  INDEX "IBF_BULLETIN_ATTACH_BULL_ID" ON BF_BULLETIN_ATTACH (BULL_ID);
------------------------------------------------


-- DROP TABLE BF_BULLETIN_USER;
CREATE TABLE BF_BULLETIN_USER (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   BULL_ID INT NOT NULL ,
   USER_ID INT NOT NULL ,
   IS_READ SMALLINT DEFAULT 0 NOT NULL ,
   READ_TIME TIMESTAMP
);
COMMENT ON TABLE BF_BULLETIN_USER IS '公告阅读情况';
COMMENT ON COLUMN BF_BULLETIN_USER.ID IS 'ID ';
COMMENT ON COLUMN BF_BULLETIN_USER.BULL_ID IS '公告ID';
COMMENT ON COLUMN BF_BULLETIN_USER.USER_ID IS '用户ID';
COMMENT ON COLUMN BF_BULLETIN_USER.IS_READ IS '是否已读';
COMMENT ON COLUMN BF_BULLETIN_USER.READ_TIME IS '阅读时间';
CREATE  INDEX "IBF_BULLETIN_USER_BULL_ID" ON BF_BULLETIN_USER (BULL_ID);
CREATE  INDEX "IBF_BULLETIN_USER_USER_ID" ON BF_BULLETIN_USER (USER_ID);
CREATE  INDEX "IBF_BULLETIN_USER_IS_READ" ON BF_BULLETIN_USER (IS_READ);
------------------------------------------------


-- DROP TABLE BF_CHART_REPORT;
CREATE TABLE BF_CHART_REPORT (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(128) NOT NULL ,
   DB_ID INT DEFAULT 0 NOT NULL ,
   CHART_TYPE INT,
   IS_SHOW_EXPORT SMALLINT DEFAULT 1 NOT NULL ,
   IS_SHOW_DEBUG SMALLINT DEFAULT 1 NOT NULL ,
   SQL_CODE CLOB NOT NULL ,
   CHART_CODE CLOB NOT NULL ,
   TOP_CODE CLOB NOT NULL ,
   BOTTOM_CODE CLOB NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   REMARK VARCHAR(512),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_CHART_REPORT IS '图形报表';
COMMENT ON COLUMN BF_CHART_REPORT.ID IS 'ID ';
COMMENT ON COLUMN BF_CHART_REPORT.NAME IS '图形报表名称';
COMMENT ON COLUMN BF_CHART_REPORT.DB_ID IS '数据库ID（为0时表示默认数据库）';
COMMENT ON COLUMN BF_CHART_REPORT.CHART_TYPE IS '图表类型';
COMMENT ON COLUMN BF_CHART_REPORT.IS_SHOW_EXPORT IS '是否显示“导出”按钮';
COMMENT ON COLUMN BF_CHART_REPORT.IS_SHOW_DEBUG IS '是否显示“调试”按钮';
COMMENT ON COLUMN BF_CHART_REPORT.SQL_CODE IS 'SQL语句';
COMMENT ON COLUMN BF_CHART_REPORT.CHART_CODE IS '图表代码体';
COMMENT ON COLUMN BF_CHART_REPORT.TOP_CODE IS '表格上方的代码（允许HTML、CSS及JS）';
COMMENT ON COLUMN BF_CHART_REPORT.BOTTOM_CODE IS '表格下方的代码（允许HTML、CSS及JS）';
COMMENT ON COLUMN BF_CHART_REPORT.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_CHART_REPORT.REMARK IS '备注';
COMMENT ON COLUMN BF_CHART_REPORT.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_CHART_REPORT.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_CHART_REPORT.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_CHART_REPORT.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_CHART_REPORT_NAME" ON BF_CHART_REPORT (NAME);
------------------------------------------------


-- DROP TABLE BF_CHART_REPORT_FILTER;
CREATE TABLE BF_CHART_REPORT_FILTER (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   REPORT_ID INT NOT NULL ,
   FILTER_TYPE SMALLINT NOT NULL ,
   FILTER_NAME VARCHAR(32) NOT NULL ,
   FIELD_NAME VARCHAR(32) NOT NULL ,
   FIELD_DATA_TYPE SMALLINT NOT NULL ,
   INPUT_NAME VARCHAR(32) NOT NULL ,
   FILTER_OPERATOR SMALLINT NOT NULL ,
   DEFAULT_VALUE VARCHAR(32),
   INPUT_WIDTH INT NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_CHART_REPORT_FILTER IS '图形报表筛选配置';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.ID IS 'ID ';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.REPORT_ID IS '报表ID ';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.FILTER_TYPE IS '筛选类型（位置） 对应枚举值：FilterType ';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.FILTER_NAME IS '筛选项名称';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.FIELD_NAME IS '筛选字段名';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.FIELD_DATA_TYPE IS '字段类型 对应枚举类型：FieldDataType';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.INPUT_NAME IS '输入框名称（默认等于字段名）';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.FILTER_OPERATOR IS '筛选逻辑 对应枚举值：FilterOperator';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.DEFAULT_VALUE IS '默认值';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.INPUT_WIDTH IS '输入框宽度';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_CHART_REPORT_FILTER.UPDATE_TIME IS '修改时间';
CREATE  INDEX "I_ART_REPORT_FILTER_REPORT_ID" ON BF_CHART_REPORT_FILTER (REPORT_ID);
------------------------------------------------


-- DROP TABLE BF_FILE;
CREATE TABLE BF_FILE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(64) NOT NULL ,
   DB_ID INT DEFAULT 0 NOT NULL ,
   TABLE_NAME VARCHAR(64) NOT NULL ,
   CREATE_TABLE_MODE SMALLINT DEFAULT 1 NOT NULL ,
   KEY_FIELD VARCHAR(64),
   IS_ALLOW_DELETE SMALLINT DEFAULT 0 NOT NULL ,
   ACCEPT_FILE_TYPES VARCHAR(512),
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   REMARK VARCHAR(512),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_FILE IS '附件';
COMMENT ON COLUMN BF_FILE.ID IS 'ID ';
COMMENT ON COLUMN BF_FILE.NAME IS '外导名称';
COMMENT ON COLUMN BF_FILE.DB_ID IS '数据库ID（为0时表示默认数据库）';
COMMENT ON COLUMN BF_FILE.TABLE_NAME IS '数据库表名';
COMMENT ON COLUMN BF_FILE.CREATE_TABLE_MODE IS '建表模式（对应枚举：CreateTableMode）';
COMMENT ON COLUMN BF_FILE.KEY_FIELD IS '主键字段名';
COMMENT ON COLUMN BF_FILE.IS_ALLOW_DELETE IS '是否允许删除自己上传的附件';
COMMENT ON COLUMN BF_FILE.ACCEPT_FILE_TYPES IS '允许的文件类型（多种文件类型用“｜”分隔）';
COMMENT ON COLUMN BF_FILE.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_FILE.REMARK IS '备注';
COMMENT ON COLUMN BF_FILE.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_FILE.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_FILE.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_FILE.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_FILE_NAME" ON BF_FILE (NAME);
------------------------------------------------


-- DROP TABLE BF_FORM;
CREATE TABLE BF_FORM (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(64) NOT NULL ,
   DB_ID INT DEFAULT 0 NOT NULL ,
   TABLE_NAME VARCHAR(64) NOT NULL ,
   CREATE_TABLE_MODE SMALLINT DEFAULT 1 NOT NULL ,
   FIELDS CLOB,
   IS_ALLOW_DELETE SMALLINT DEFAULT 0 NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   REMARK VARCHAR(512),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_FORM IS '表单编辑';
COMMENT ON COLUMN BF_FORM.ID IS 'ID ';
COMMENT ON COLUMN BF_FORM.NAME IS '表单名称';
COMMENT ON COLUMN BF_FORM.DB_ID IS '数据库ID（为0时表示默认数据库）';
COMMENT ON COLUMN BF_FORM.TABLE_NAME IS '数据库表名';
COMMENT ON COLUMN BF_FORM.CREATE_TABLE_MODE IS '建表模式（对应枚举：CreateTableMode）';
COMMENT ON COLUMN BF_FORM.FIELDS IS '字段信息，存放FieldInfo的JSON串';
COMMENT ON COLUMN BF_FORM.IS_ALLOW_DELETE IS '是否允许删除数据';
COMMENT ON COLUMN BF_FORM.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_FORM.REMARK IS '备注';
COMMENT ON COLUMN BF_FORM.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_FORM.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_FORM.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_FORM.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_FORM_NAME" ON BF_FORM (NAME);
------------------------------------------------


-- DROP TABLE BF_IMPORT;
CREATE TABLE BF_IMPORT (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(64) NOT NULL ,
   DB_ID INT DEFAULT 0 NOT NULL ,
   TABLE_NAME VARCHAR(64) NOT NULL ,
   CREATE_TABLE_MODE SMALLINT DEFAULT 1 NOT NULL ,
   FIELDS VARCHAR(1024),
   IS_ALLOW_UPDATE SMALLINT DEFAULT 1 NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   REMARK VARCHAR(512),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_IMPORT IS '数据外导';
COMMENT ON COLUMN BF_IMPORT.ID IS 'ID ';
COMMENT ON COLUMN BF_IMPORT.NAME IS '外导名称';
COMMENT ON COLUMN BF_IMPORT.DB_ID IS '数据库ID（为0时表示默认数据库）';
COMMENT ON COLUMN BF_IMPORT.TABLE_NAME IS '数据库表名';
COMMENT ON COLUMN BF_IMPORT.CREATE_TABLE_MODE IS '建表模式（对应枚举：CreateTableMode）';
COMMENT ON COLUMN BF_IMPORT.FIELDS IS '字段信息，存放FieldInfo的JSON串';
COMMENT ON COLUMN BF_IMPORT.IS_ALLOW_UPDATE IS '导入时是否允许更新数据';
COMMENT ON COLUMN BF_IMPORT.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_IMPORT.REMARK IS '备注';
COMMENT ON COLUMN BF_IMPORT.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_IMPORT.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_IMPORT.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_IMPORT.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_IMPORT_NAME" ON BF_IMPORT (NAME);
------------------------------------------------


-- DROP TABLE BF_OP_LOG;
CREATE TABLE BF_OP_LOG (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   LOG_LEVEL SMALLINT DEFAULT 3 NOT NULL ,
   LOG_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   IS_SUCCESS SMALLINT DEFAULT 1 NOT NULL ,
   SRC_IP VARCHAR(32) NOT NULL ,
   SRC_PORT INT DEFAULT 0 NOT NULL ,
   USER_ID INT DEFAULT 0 NOT NULL ,
   USER_NAME VARCHAR(64) DEFAULT '未知用户' NOT NULL ,
   CONTROLLER VARCHAR(128),
   ACTION VARCHAR(128),
   REQ_URL VARCHAR(1024),
   CONTENT VARCHAR(512),
   DETAIL CLOB
);
COMMENT ON TABLE BF_OP_LOG IS '操作日志';
COMMENT ON COLUMN BF_OP_LOG.ID IS 'ID ';
COMMENT ON COLUMN BF_OP_LOG.LOG_LEVEL IS '日志等级 ';
COMMENT ON COLUMN BF_OP_LOG.LOG_TIME IS '日志时间';
COMMENT ON COLUMN BF_OP_LOG.IS_SUCCESS IS '是否成功 ';
COMMENT ON COLUMN BF_OP_LOG.SRC_IP IS '源IP';
COMMENT ON COLUMN BF_OP_LOG.SRC_PORT IS '源端口';
COMMENT ON COLUMN BF_OP_LOG.USER_ID IS '登录用户ID';
COMMENT ON COLUMN BF_OP_LOG.USER_NAME IS '登录用户名';
COMMENT ON COLUMN BF_OP_LOG.CONTROLLER IS '控制器名称';
COMMENT ON COLUMN BF_OP_LOG.ACTION IS 'ACTION名称';
COMMENT ON COLUMN BF_OP_LOG.REQ_URL IS '请求URL地址';
COMMENT ON COLUMN BF_OP_LOG.CONTENT IS '请求内容';
COMMENT ON COLUMN BF_OP_LOG.DETAIL IS '源IP';
CREATE  INDEX "BF_OP_LOG_LOG_LEVEL" ON BF_OP_LOG (LOG_LEVEL);
CREATE  INDEX "BF_OP_LOG_LOG_TIME" ON BF_OP_LOG (LOG_TIME);
CREATE  INDEX "BF_OP_LOG_USER_ID" ON BF_OP_LOG (USER_ID);
CREATE  INDEX "BF_OP_LOG_USER_NAME" ON BF_OP_LOG (USER_NAME);
------------------------------------------------


-- DROP TABLE BF_ST_FLOW;
CREATE TABLE BF_ST_FLOW (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(256) NOT NULL ,
   TYPE_ID INT NOT NULL ,
   CRON VARCHAR(32) NOT NULL ,
   RETRY_TIMES INT DEFAULT 0 NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   RUN_STATUS SMALLINT DEFAULT 0 NOT NULL ,
   LAST_TASK_IS SMALLINT DEFAULT 0 NOT NULL ,
   LAST_TASK_ID INT DEFAULT 0 NOT NULL ,
   LAST_TASK_ST TIMESTAMP,
   LAST_TASK_FT TIMESTAMP,
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_ST_FLOW IS '脚本流';
COMMENT ON COLUMN BF_ST_FLOW.ID IS 'ID ';
COMMENT ON COLUMN BF_ST_FLOW.NAME IS '脚本流名称';
COMMENT ON COLUMN BF_ST_FLOW.TYPE_ID IS '脚本流类型';
COMMENT ON COLUMN BF_ST_FLOW.CRON IS '时间表达式';
COMMENT ON COLUMN BF_ST_FLOW.RETRY_TIMES IS '失败重试次数';
COMMENT ON COLUMN BF_ST_FLOW.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_ST_FLOW.RUN_STATUS IS '最新任务运行状态（对应枚举：RunStatus)';
COMMENT ON COLUMN BF_ST_FLOW.LAST_TASK_IS IS '最新任务是否成功';
COMMENT ON COLUMN BF_ST_FLOW.LAST_TASK_ID IS '最新任务ID';
COMMENT ON COLUMN BF_ST_FLOW.LAST_TASK_ST IS '最新任务开始时间';
COMMENT ON COLUMN BF_ST_FLOW.LAST_TASK_FT IS '最新任务完成时间';
COMMENT ON COLUMN BF_ST_FLOW.REMARK IS '备注';
COMMENT ON COLUMN BF_ST_FLOW.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_ST_FLOW.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_ST_FLOW.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_ST_FLOW.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_ST_FLOW_NAME" ON BF_ST_FLOW (NAME);
------------------------------------------------


-- DROP TABLE BF_ST_FLOW_NODE;
CREATE TABLE BF_ST_FLOW_NODE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   FLOW_ID INT NOT NULL ,
   NODE_ID INT NOT NULL ,
   PRE_NODE_IDS VARCHAR(256),
   DIV_X INT DEFAULT 0 NOT NULL ,
   DIV_Y INT DEFAULT 0 NOT NULL 
);
COMMENT ON TABLE BF_ST_FLOW_NODE IS '脚本流与节点的绑定';
COMMENT ON COLUMN BF_ST_FLOW_NODE.ID IS 'ID ';
COMMENT ON COLUMN BF_ST_FLOW_NODE.FLOW_ID IS '脚本流ID';
COMMENT ON COLUMN BF_ST_FLOW_NODE.NODE_ID IS '脚本节点ID';
COMMENT ON COLUMN BF_ST_FLOW_NODE.PRE_NODE_IDS IS '前前节点（集合，没有则为空，有则逗号分隔）';
COMMENT ON COLUMN BF_ST_FLOW_NODE.DIV_X IS '页面展示时DIV位置X坐标';
COMMENT ON COLUMN BF_ST_FLOW_NODE.DIV_Y IS '页面展示时DIV位置Y坐标';
CREATE  INDEX "IBF_ST_FLOW_NODE_FLOW_ID" ON BF_ST_FLOW_NODE (FLOW_ID);
------------------------------------------------


-- DROP TABLE BF_ST_NODE;
CREATE TABLE BF_ST_NODE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(256) NOT NULL ,
   TYPE_ID INT NOT NULL ,
   DB_ID INT DEFAULT 0 NOT NULL ,
   CONTENT CLOB NOT NULL ,
   RUN_STATUS SMALLINT DEFAULT 0 NOT NULL ,
   LAST_TASK_IS SMALLINT DEFAULT 0 NOT NULL ,
   LAST_TASK_ID INT DEFAULT 0 NOT NULL ,
   LAST_TASK_ST TIMESTAMP,
   LAST_TASK_FT TIMESTAMP,
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_ST_NODE IS '脚本节点';
COMMENT ON COLUMN BF_ST_NODE.ID IS 'ID ';
COMMENT ON COLUMN BF_ST_NODE.NAME IS '节点名称';
COMMENT ON COLUMN BF_ST_NODE.TYPE_ID IS '脚本类型';
COMMENT ON COLUMN BF_ST_NODE.DB_ID IS '数据库ID（为0时表示默认数据库）';
COMMENT ON COLUMN BF_ST_NODE.CONTENT IS '脚本内容';
COMMENT ON COLUMN BF_ST_NODE.RUN_STATUS IS '运行状态（对应枚举：RunStatus)';
COMMENT ON COLUMN BF_ST_NODE.LAST_TASK_IS IS '最新任务是否成功';
COMMENT ON COLUMN BF_ST_NODE.LAST_TASK_ID IS '最新任务ID';
COMMENT ON COLUMN BF_ST_NODE.LAST_TASK_ST IS '最新任务开始时间';
COMMENT ON COLUMN BF_ST_NODE.LAST_TASK_FT IS '最新任务完成时间';
COMMENT ON COLUMN BF_ST_NODE.REMARK IS '备注';
COMMENT ON COLUMN BF_ST_NODE.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_ST_NODE.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_ST_NODE.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_ST_NODE.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_ST_NODE_NAME" ON BF_ST_NODE (NAME);
------------------------------------------------


-- DROP TABLE BF_ST_TASK;
CREATE TABLE BF_ST_TASK (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   FLOW_ID INT NOT NULL ,
   NODE_ID INT NOT NULL ,
   IS_MANUAL INT DEFAULT 0 NOT NULL ,
   REFERENCE_DATE TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   RETRY_TIMES INT DEFAULT 0 NOT NULL ,
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   RUN_STATUS SMALLINT DEFAULT 0 NOT NULL ,
   IS_SUCCESS SMALLINT DEFAULT 0 NOT NULL ,
   START_TIME TIMESTAMP,
   FINISH_TIME TIMESTAMP
);
COMMENT ON TABLE BF_ST_TASK IS '脚本任务';
COMMENT ON COLUMN BF_ST_TASK.ID IS 'ID ';
COMMENT ON COLUMN BF_ST_TASK.FLOW_ID IS '脚本流ID';
COMMENT ON COLUMN BF_ST_TASK.NODE_ID IS '脚本节点ID';
COMMENT ON COLUMN BF_ST_TASK.IS_MANUAL IS '是否为手动任务';
COMMENT ON COLUMN BF_ST_TASK.REFERENCE_DATE IS '基准日期';
COMMENT ON COLUMN BF_ST_TASK.RETRY_TIMES IS '失败重试次数';
COMMENT ON COLUMN BF_ST_TASK.REMARK IS '备注';
COMMENT ON COLUMN BF_ST_TASK.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_ST_TASK.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_ST_TASK.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_ST_TASK.UPDATE_TIME IS '更新时间';
COMMENT ON COLUMN BF_ST_TASK.RUN_STATUS IS '运行状态（对应枚举：RunStatus)';
COMMENT ON COLUMN BF_ST_TASK.IS_SUCCESS IS '是否成功';
COMMENT ON COLUMN BF_ST_TASK.START_TIME IS '创建时间';
COMMENT ON COLUMN BF_ST_TASK.FINISH_TIME IS '修改时间';
CREATE  INDEX "IBF_ST_TASK_FLOW_ID" ON BF_ST_TASK (FLOW_ID);
------------------------------------------------


-- DROP TABLE BF_ST_TASK_FLOW_NODE;
CREATE TABLE BF_ST_TASK_FLOW_NODE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_ID INT NOT NULL ,
   FLOW_ID INT NOT NULL ,
   NODE_ID INT NOT NULL ,
   PRE_NODE_IDS VARCHAR(256),
   DIV_X INT DEFAULT 0 NOT NULL ,
   DIV_Y INT DEFAULT 0 NOT NULL ,
   CONTENT CLOB NOT NULL ,
   CODE CLOB,
   RUN_STATUS SMALLINT DEFAULT 0 NOT NULL ,
   IS_SUCCESS SMALLINT DEFAULT 0 NOT NULL ,
   RETRY_TIMES INT DEFAULT 0 NOT NULL ,
   FAIL_TIMES SMALLINT DEFAULT 0 NOT NULL ,
   REFERENCE_DATE TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   START_TIME TIMESTAMP,
   FINISH_TIME TIMESTAMP
);
COMMENT ON TABLE BF_ST_TASK_FLOW_NODE IS '任务详情（脚本流与节点的绑定的实例）';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.ID IS 'ID ';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.TASK_ID IS '任务ID';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.FLOW_ID IS '脚本流ID';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.NODE_ID IS '脚本节点ID';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.PRE_NODE_IDS IS '前前节点（集合，没有则为空，有则逗号分隔）';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.DIV_X IS '页面展示时DIV位置X坐标';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.DIV_Y IS '页面展示时DIV位置Y坐标';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.CONTENT IS '脚本内容';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.CODE IS '编译前的代码';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.RUN_STATUS IS '运行状态（对应枚举：RunStatus)';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.IS_SUCCESS IS '是否成功';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.RETRY_TIMES IS '失败重试次数';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.FAIL_TIMES IS '失败次数';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.REFERENCE_DATE IS '基准日期';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.START_TIME IS '创建时间';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE.FINISH_TIME IS '修改时间';
CREATE  INDEX "IBF_ST_TASK_FLOW_NODE_TASK_ID" ON BF_ST_TASK_FLOW_NODE (TASK_ID);
CREATE  INDEX "IBF_ST_TASK_FLOW_NODE_FLOW_ID" ON BF_ST_TASK_FLOW_NODE (FLOW_ID);
------------------------------------------------


-- DROP TABLE BF_ST_TASK_FLOW_NODE_LOG;
CREATE TABLE BF_ST_TASK_FLOW_NODE_LOG (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TFN_ID INT NOT NULL ,
   TASK_ID INT NOT NULL ,
   FLOW_ID INT NOT NULL ,
   NODE_ID INT NOT NULL ,
   LOG_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   LOG_LEVEL SMALLINT DEFAULT 3 NOT NULL ,
   MESSAGE CLOB NOT NULL ,
   SQL CLOB
);
COMMENT ON TABLE BF_ST_TASK_FLOW_NODE_LOG IS '节点运行日志';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE_LOG.ID IS 'ID ';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE_LOG.TFN_ID IS 'BF_ST_TASK_FLOW_NODE表主键';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE_LOG.TASK_ID IS '任务ID';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE_LOG.FLOW_ID IS '脚本节点ID';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE_LOG.NODE_ID IS '脚本节点ID';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE_LOG.LOG_TIME IS '日志时间';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE_LOG.LOG_LEVEL IS '日志等级';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE_LOG.MESSAGE IS '日志内容';
COMMENT ON COLUMN BF_ST_TASK_FLOW_NODE_LOG.SQL IS '执行的SQL语句';
CREATE  INDEX "I_T_TASK_FLOW_NODE_LOG_TFN_ID" ON BF_ST_TASK_FLOW_NODE_LOG (TFN_ID);
CREATE  INDEX "I__TASK_FLOW_NODE_LOG_TASK_ID" ON BF_ST_TASK_FLOW_NODE_LOG (TASK_ID);
CREATE  INDEX "I__TASK_FLOW_NODE_LOG_FLOW_ID" ON BF_ST_TASK_FLOW_NODE_LOG (FLOW_ID);
CREATE  INDEX "I__TASK_FLOW_NODE_LOG_NODE_ID" ON BF_ST_TASK_FLOW_NODE_LOG (NODE_ID);
------------------------------------------------


-- DROP TABLE BF_ST_TASK_LOG;
CREATE TABLE BF_ST_TASK_LOG (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_ID INT NOT NULL ,
   LOG_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   LOG_LEVEL SMALLINT DEFAULT 3 NOT NULL ,
   MESSAGE CLOB NOT NULL 
);
COMMENT ON TABLE BF_ST_TASK_LOG IS '任务日志';
COMMENT ON COLUMN BF_ST_TASK_LOG.ID IS 'ID ';
COMMENT ON COLUMN BF_ST_TASK_LOG.TASK_ID IS '任务ID';
COMMENT ON COLUMN BF_ST_TASK_LOG.LOG_TIME IS '日志时间';
COMMENT ON COLUMN BF_ST_TASK_LOG.LOG_LEVEL IS '日志等级';
COMMENT ON COLUMN BF_ST_TASK_LOG.MESSAGE IS '日志内容';
CREATE  INDEX "IBF_ST_TASK_LOG_TASK_ID" ON BF_ST_TASK_LOG (TASK_ID);
------------------------------------------------


-- DROP TABLE BF_ST_TYPE;
CREATE TABLE BF_ST_TYPE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(256) NOT NULL ,
   PID INT DEFAULT 0 NOT NULL ,
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_ST_TYPE IS '脚本类型';
COMMENT ON COLUMN BF_ST_TYPE.ID IS 'ID ';
COMMENT ON COLUMN BF_ST_TYPE.NAME IS '类型名称';
COMMENT ON COLUMN BF_ST_TYPE.PID IS '上级类型ID';
COMMENT ON COLUMN BF_ST_TYPE.REMARK IS '备注';
COMMENT ON COLUMN BF_ST_TYPE.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_ST_TYPE.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_ST_TYPE.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_ST_TYPE.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_ST_TYPE_NAME" ON BF_ST_TYPE (NAME);
------------------------------------------------


-- DROP TABLE BF_SYS_CONFIG;
CREATE TABLE BF_SYS_CONFIG (
   ID INT NOT NULL  PRIMARY KEY,
   VALUE VARCHAR(1024) NOT NULL ,
   REMARK VARCHAR(512),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_SYS_CONFIG IS '系统配置';
COMMENT ON COLUMN BF_SYS_CONFIG.ID IS 'ID主键';
COMMENT ON COLUMN BF_SYS_CONFIG.VALUE IS '配置项值 ';
COMMENT ON COLUMN BF_SYS_CONFIG.REMARK IS '备注 ';
COMMENT ON COLUMN BF_SYS_CONFIG.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_SYS_CONFIG.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_SYS_CONFIG.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_SYS_CONFIG.UPDATE_TIME IS '修改时间';
------------------------------------------------


-- DROP TABLE BF_TB_REPORT;
CREATE TABLE BF_TB_REPORT (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(128) NOT NULL ,
   DB_ID INT DEFAULT 0 NOT NULL ,
   IS_SHOW_EXPORT SMALLINT DEFAULT 1 NOT NULL ,
   IS_SHOW_DEBUG SMALLINT DEFAULT 1 NOT NULL ,
   IS_SHOW_CHECKBOX SMALLINT DEFAULT 1 NOT NULL ,
   SQL_CODE CLOB NOT NULL ,
   DEFAULT_INPUT_VALUES VARCHAR(1024),
   SHOW_FIELDS CLOB,
   TOP_CODE CLOB,
   BOTTOM_CODE CLOB,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   REMARK VARCHAR(512),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_TB_REPORT IS '表格报表';
COMMENT ON COLUMN BF_TB_REPORT.ID IS 'ID ';
COMMENT ON COLUMN BF_TB_REPORT.NAME IS '报表名称';
COMMENT ON COLUMN BF_TB_REPORT.DB_ID IS '数据库ID（为0时表示默认数据库）';
COMMENT ON COLUMN BF_TB_REPORT.IS_SHOW_EXPORT IS '是否显示“导出”按钮';
COMMENT ON COLUMN BF_TB_REPORT.IS_SHOW_DEBUG IS '是否显示“调试”按钮';
COMMENT ON COLUMN BF_TB_REPORT.IS_SHOW_CHECKBOX IS '是否显示复选框';
COMMENT ON COLUMN BF_TB_REPORT.SQL_CODE IS 'SQL语句';
COMMENT ON COLUMN BF_TB_REPORT.DEFAULT_INPUT_VALUES IS '默认输入参数（用于后台分析SQL语句提取字段信息）';
COMMENT ON COLUMN BF_TB_REPORT.SHOW_FIELDS IS '字段显示设置（使用layui的table样式存储）';
COMMENT ON COLUMN BF_TB_REPORT.TOP_CODE IS '表格上方的代码（允许HTML、CSS及JS）';
COMMENT ON COLUMN BF_TB_REPORT.BOTTOM_CODE IS '表格下方的代码（允许HTML、CSS及JS）';
COMMENT ON COLUMN BF_TB_REPORT.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_TB_REPORT.REMARK IS '备注';
COMMENT ON COLUMN BF_TB_REPORT.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_TB_REPORT.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_TB_REPORT.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_TB_REPORT.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_TB_REPORT_NAME" ON BF_TB_REPORT (NAME);
------------------------------------------------


-- DROP TABLE BF_DATABASE;
CREATE TABLE BF_DATABASE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(256) NOT NULL ,
   DB_TYPE INT NOT NULL ,
   IP VARCHAR(32) NOT NULL ,
   PORT INT NOT NULL ,
   USER_NAME VARCHAR(64) NOT NULL ,
   PASSWORD VARCHAR(256) NOT NULL ,
   DB_NAME VARCHAR(64) NOT NULL ,
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_DATABASE IS '数据库管理';
COMMENT ON COLUMN BF_DATABASE.ID IS 'ID ';
COMMENT ON COLUMN BF_DATABASE.NAME IS '数据库名称';
COMMENT ON COLUMN BF_DATABASE.DB_TYPE IS '数据库类型，对应枚举变量：DBType';
COMMENT ON COLUMN BF_DATABASE.IP IS 'IP地址';
COMMENT ON COLUMN BF_DATABASE.PORT IS '端口号';
COMMENT ON COLUMN BF_DATABASE.USER_NAME IS '登录用户名';
COMMENT ON COLUMN BF_DATABASE.PASSWORD IS '登录密码';
COMMENT ON COLUMN BF_DATABASE.DB_NAME IS '数据库名（或实例名）';
COMMENT ON COLUMN BF_DATABASE.REMARK IS '备注';
COMMENT ON COLUMN BF_DATABASE.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_DATABASE.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_DATABASE.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_DATABASE.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_DATABASE_NAME" ON BF_DATABASE (NAME);
------------------------------------------------


-- DROP TABLE BF_DEPARTMENT;
CREATE TABLE BF_DEPARTMENT (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   P_CODE INT DEFAULT 0 NOT NULL ,
   DEPT_CODE INT DEFAULT 0 NOT NULL ,
   NAME VARCHAR(256) NOT NULL ,
   DEPT_LEVEL INT DEFAULT 1 NOT NULL ,
   DEPT_FLAG INT DEFAULT 0 NOT NULL ,
   EXTEND_1 VARCHAR(256),
   EXTEND_2 VARCHAR(256),
   EXTEND_3 VARCHAR(256),
   EXTEND_4 VARCHAR(256),
   EXTEND_5 VARCHAR(256),
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_DEPARTMENT IS '部门管理';
COMMENT ON COLUMN BF_DEPARTMENT.ID IS 'ID ';
COMMENT ON COLUMN BF_DEPARTMENT.P_CODE IS '上级部门编码';
COMMENT ON COLUMN BF_DEPARTMENT.DEPT_CODE IS '部门编码';
COMMENT ON COLUMN BF_DEPARTMENT.NAME IS '部门名称';
COMMENT ON COLUMN BF_DEPARTMENT.DEPT_LEVEL IS '层级';
COMMENT ON COLUMN BF_DEPARTMENT.DEPT_FLAG IS '部门标志（1表示组织，0表示部门）';
COMMENT ON COLUMN BF_DEPARTMENT.EXTEND_1 IS '备用字段：SCHEMA名称';
COMMENT ON COLUMN BF_DEPARTMENT.EXTEND_2 IS '备用字段：计件集市物理数据库06/07';
COMMENT ON COLUMN BF_DEPARTMENT.EXTEND_3 IS '备用字段：ESOP物理数据库72/73';
COMMENT ON COLUMN BF_DEPARTMENT.EXTEND_4 IS '备用字段：地市车牌号';
COMMENT ON COLUMN BF_DEPARTMENT.EXTEND_5 IS '备用字段：暂无用处';
COMMENT ON COLUMN BF_DEPARTMENT.REMARK IS '备注';
COMMENT ON COLUMN BF_DEPARTMENT.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_DEPARTMENT.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_DEPARTMENT.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_DEPARTMENT.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_DEPARTMENT_DEPT_CODE" ON BF_DEPARTMENT (DEPT_CODE);
------------------------------------------------

-- DROP TABLE BF_MENU;
CREATE TABLE BF_MENU (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 151 INCREMENT BY 1 CACHE 20),
   PID INT NOT NULL ,
   NAME VARCHAR(64) NOT NULL ,
   FONT VARCHAR(128),
   ICON VARCHAR(128),
   ORDER_NUM INT DEFAULT 1 NOT NULL ,
   URL VARCHAR(1024),
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   IS_DEFAULT SMALLINT DEFAULT 0 NOT NULL ,
   IS_SHOW_NAV SMALLINT DEFAULT 0 NOT NULL ,
   REPORT_TYPE SMALLINT DEFAULT 0 NOT NULL ,
   REPORT_ID INT DEFAULT 0 NOT NULL ,
   REMARK VARCHAR(512),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_MENU IS '系统菜单';
COMMENT ON COLUMN BF_MENU.ID IS 'ID ';
COMMENT ON COLUMN BF_MENU.PID IS '上级菜单';
COMMENT ON COLUMN BF_MENU.NAME IS '菜单名称';
COMMENT ON COLUMN BF_MENU.FONT IS '菜单图标库';
COMMENT ON COLUMN BF_MENU.ICON IS '菜单图标库';
COMMENT ON COLUMN BF_MENU.ORDER_NUM IS '菜单顺序（数字越小排越前面）';
COMMENT ON COLUMN BF_MENU.URL IS '菜单URL地址（可带必要参数）';
COMMENT ON COLUMN BF_MENU.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_MENU.IS_DEFAULT IS '是否为内置菜单';
COMMENT ON COLUMN BF_MENU.IS_SHOW_NAV IS '是否显示在导航（菜单）';
COMMENT ON COLUMN BF_MENU.REPORT_TYPE IS '报表类型（对应枚举变量：ReportType）';
COMMENT ON COLUMN BF_MENU.REPORT_ID IS '报表ID（为0时表示现有页面）';
COMMENT ON COLUMN BF_MENU.REMARK IS '备注';
COMMENT ON COLUMN BF_MENU.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_MENU.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_MENU.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_MENU.UPDATE_TIME IS '修改时间';
------------------------------------------------


-- DROP TABLE BF_ROLE;
CREATE TABLE BF_ROLE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 2 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(64) NOT NULL ,
   MENU_IDS VARCHAR(1024) NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   REMARK VARCHAR(512),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_ROLE IS '角色管理';
COMMENT ON COLUMN BF_ROLE.ID IS 'ID ';
COMMENT ON COLUMN BF_ROLE.NAME IS '创建者ID';
COMMENT ON COLUMN BF_ROLE.MENU_IDS IS '可访问菜单ID（多个ID以逗号分隔，“ALL”表示所有）';
COMMENT ON COLUMN BF_ROLE.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_ROLE.REMARK IS '备注';
COMMENT ON COLUMN BF_ROLE.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_ROLE.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_ROLE.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_ROLE.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_ROLE_NAME" ON BF_ROLE (NAME);
------------------------------------------------


-- DROP TABLE BF_TB_REPORT_EVENT;
CREATE TABLE BF_TB_REPORT_EVENT (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   REPORT_ID INT NOT NULL ,
   EVENT_TYPE SMALLINT NOT NULL ,
   EVENT_NAME VARCHAR(32) NOT NULL ,
   ORDER_NUM INT DEFAULT 1 NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   BUTTON_TEXT VARCHAR(32) NOT NULL ,
   BUTTON_BG_COLOR VARCHAR(32),
   REQUEST_MODE SMALLINT DEFAULT 0 NOT NULL ,
   REQUEST_URL VARCHAR(1024),
   SHOW_WIDTH SMALLINT NOT NULL ,
   SHOW_HEIGHT SMALLINT NOT NULL ,
   BUTTON_ICON VARCHAR(200),
   BUTTON_STYLE VARCHAR(200),
   EVENT_STYLE VARCHAR(32),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_TB_REPORT_EVENT IS '表格报表事件配置';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.ID IS 'ID ';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.REPORT_ID IS '报表ID ';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.EVENT_TYPE IS '事件类型（对应枚举变量：EventType）';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.EVENT_NAME IS '事件名称 ';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.ORDER_NUM IS '按钮顺序（数字越小排越前面）';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.BUTTON_TEXT IS '按钮显示名称 ';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.BUTTON_BG_COLOR IS '按钮背景色，允许CSS规范中的写法（为空则使用默认颜色）';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.REQUEST_MODE IS '请求模式（对应枚举变量：RequestMode）';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.REQUEST_URL IS '按钮请求的URL地址（可以带参数，参数可以根据规则使用变量）';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.SHOW_WIDTH IS '弹出显示时，弹出层宽度';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.SHOW_HEIGHT IS '弹出显示时，弹出层高度';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.BUTTON_ICON IS '按钮图标';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.BUTTON_STYLE IS '按钮样式';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.EVENT_STYLE IS '事件样式';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_TB_REPORT_EVENT.UPDATE_TIME IS '修改时间';
CREATE  INDEX "IBF_TB_REPORT_EVENT_REPORT_ID" ON BF_TB_REPORT_EVENT (REPORT_ID);
------------------------------------------------


-- DROP TABLE BF_TB_REPORT_FILTER;
CREATE TABLE BF_TB_REPORT_FILTER (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   REPORT_ID INT NOT NULL ,
   FILTER_TYPE SMALLINT NOT NULL ,
   FILTER_NAME VARCHAR(32) NOT NULL ,
   FIELD_NAME VARCHAR(32) NOT NULL ,
   FIELD_DATA_TYPE SMALLINT NOT NULL ,
   ORDER_NUM INT DEFAULT 1 NOT NULL ,
   FORM_QUERY_TYPE SMALLINT NOT NULL ,
   SELECT_DETAIL VARCHAR(1024),
   DEFAULT_VALUE VARCHAR(512),
   INPUT_WIDTH INT NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_TB_REPORT_FILTER IS '表格报表筛选配置';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.ID IS 'ID ';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.REPORT_ID IS '报表ID ';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.FILTER_TYPE IS '筛选类型（位置） 对应枚举值：FilterType ';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.FILTER_NAME IS '筛选项名称';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.FIELD_NAME IS '筛选字段名';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.FIELD_DATA_TYPE IS '字段类型 对应枚举类型：FieldDataType';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.ORDER_NUM IS '筛选项顺序（数字越小排越前面）';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.FORM_QUERY_TYPE IS '输入框类型 对应枚举值：FormQueryType';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.SELECT_DETAIL IS '下拉框配置详情，当字段FORM_QUERY_TYPE为“下拉单选”时有效';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.DEFAULT_VALUE IS '默认值';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.INPUT_WIDTH IS '输入框宽度';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.IS_ENABLE IS '是否有效';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_TB_REPORT_FILTER.UPDATE_TIME IS '修改时间';
CREATE  INDEX "IBF_TB_REPORT_FILTER_REPORT_ID" ON BF_TB_REPORT_FILTER (REPORT_ID);
------------------------------------------------


-- DROP TABLE BF_USER;
CREATE TABLE BF_USER (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 2 INCREMENT BY 1 CACHE 20),
   DEPT_ID INT DEFAULT 0 NOT NULL ,
   ROLE_IDS VARCHAR(512) NOT NULL ,
   NAME VARCHAR(128) NOT NULL ,
   FULL_NAME VARCHAR(64) NOT NULL ,
   PASSWORD VARCHAR(32) NOT NULL ,
   LOGIN_COUNT INT DEFAULT 0 NOT NULL ,
   LOGIN_FAIL_COUNT INT DEFAULT 0 NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   IS_LOCKED SMALLINT DEFAULT 0 NOT NULL ,
   PHONE_NUMBER VARCHAR(32),
   E_MAIL VARCHAR(256),
   QQ VARCHAR(32),
   LAST_LOGIN_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_USER IS '用户管理';
COMMENT ON COLUMN BF_USER.ID IS 'ID ';
COMMENT ON COLUMN BF_USER.DEPT_ID IS '所属组织机构ID';
COMMENT ON COLUMN BF_USER.ROLE_IDS IS '所属角色ID，多个角色逗号分隔';
COMMENT ON COLUMN BF_USER.NAME IS '登录名，不可重复';
COMMENT ON COLUMN BF_USER.FULL_NAME IS '全名（姓名）';
COMMENT ON COLUMN BF_USER.PASSWORD IS '密码';
COMMENT ON COLUMN BF_USER.LOGIN_COUNT IS '登录次数';
COMMENT ON COLUMN BF_USER.LOGIN_FAIL_COUNT IS '登录失败次数';
COMMENT ON COLUMN BF_USER.IS_ENABLE IS '是否启用';
COMMENT ON COLUMN BF_USER.IS_LOCKED IS '是否锁定';
COMMENT ON COLUMN BF_USER.PHONE_NUMBER IS '电话号码';
COMMENT ON COLUMN BF_USER.E_MAIL IS '邮箱地址';
COMMENT ON COLUMN BF_USER.QQ IS 'QQ号码';
COMMENT ON COLUMN BF_USER.LAST_LOGIN_TIME IS '最后登录时间';
COMMENT ON COLUMN BF_USER.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_USER.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_USER.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_USER.UPDATE_TIME IS '修改时间';
CREATE UNIQUE INDEX "IBF_USER_NAME" ON BF_USER (NAME);
------------------------------------------------


-- DROP TABLE BF_FIELD;
CREATE TABLE BF_FIELD (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 11 INCREMENT BY 1 CACHE 20),
   EN_NAME VARCHAR(64) NOT NULL ,
   CN_NAME VARCHAR(128) NOT NULL ,
   FIELD_DATA_TYPE SMALLINT NOT NULL ,
   IS_REQUISITE SMALLINT DEFAULT 0 NOT NULL ,
   IS_SHOW SMALLINT DEFAULT 1 NOT NULL ,
   IS_FIXED SMALLINT DEFAULT 0 NOT NULL ,
   IS_SORT SMALLINT DEFAULT 0 NOT NULL ,
   SHOW_LENGTH INT DEFAULT 0 NOT NULL ,
   SHOW_WIDTH SMALLINT DEFAULT 80 NOT NULL ,
   IS_DEFAULT SMALLINT DEFAULT 0 NOT NULL ,
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
COMMENT ON TABLE BF_FIELD IS '通用字段显示配置，主要用来在查询管理中能够快捷地进行字段的中文命名、显示宽度设置等';
COMMENT ON COLUMN BF_FIELD.ID IS 'ID 自增长，主键';
COMMENT ON COLUMN BF_FIELD.EN_NAME IS '字段英文名 ';
COMMENT ON COLUMN BF_FIELD.CN_NAME IS '字段中文名 ';
COMMENT ON COLUMN BF_FIELD.FIELD_DATA_TYPE IS '字段类型 对应枚举类型：FieldDataType';
COMMENT ON COLUMN BF_FIELD.IS_REQUISITE IS '是否必须 对于业务数据源表，该字段是否为必须（1:必须；0:不必须）';
COMMENT ON COLUMN BF_FIELD.IS_SHOW IS '是否显示 是否在列表中显示（1显示；0不显示）';
COMMENT ON COLUMN BF_FIELD.IS_FIXED IS '是否冻结在左侧（1冻结；0不冻结）';
COMMENT ON COLUMN BF_FIELD.IS_SORT IS '是否排序 是否允许排序（1允许；0不允许）';
COMMENT ON COLUMN BF_FIELD.SHOW_LENGTH IS '字段显示长度 在列表中显示的字符数（0表示全显示）';
COMMENT ON COLUMN BF_FIELD.SHOW_WIDTH IS '字段显示宽度 在列表中显示的宽度（0表示自动）,单位：像素';
COMMENT ON COLUMN BF_FIELD.IS_DEFAULT IS '是否为默认记录 ';
COMMENT ON COLUMN BF_FIELD.REMARK IS '备注 ';
COMMENT ON COLUMN BF_FIELD.CREATE_UID IS '创建者ID';
COMMENT ON COLUMN BF_FIELD.UPDATE_UID IS '修改者者ID';
COMMENT ON COLUMN BF_FIELD.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN BF_FIELD.UPDATE_TIME IS '修改时间';
------------------------------------------------

--***********************************************************************************************

--***********************************************************************************************
DROP TABLE QS_JJ;
CREATE TABLE QS_JJ (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(256) NOT NULL ,
   CITY INT DEFAULT 0 NOT NULL ,
   FORMULA VARCHAR(1024) NOT NULL ,
   CONTENT CLOB,
   FILES CLOB,
   MAX_INTEGRAL INT DEFAULT 0 NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   IS_APPROVAL SMALLINT DEFAULT 0 NOT NULL ,
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   APPROVAL_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   APPROVAL_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
------------------------------------------------

DROP TABLE QS_JJ_RULE;
CREATE TABLE QS_JJ_RULE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   JJ_ID INT NOT NULL ,
   TARGET_ID INT NOT NULL ,
   FORMULA VARCHAR(1024) NOT NULL 
);
------------------------------------------------


CREATE TABLE QS_JJ_FEE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_ID INT NOT NULL ,
   YYYYMM INT NOT NULL ,
   CITY INT NOT NULL ,
   CITY_NAME VARCHAR(32) NOT NULL ,
   COUNTY INT NOT NULL ,
   COUNTY_NAME VARCHAR(32) NOT NULL ,
   CM_ID VARCHAR(32) NOT NULL ,
   CM_NAME VARCHAR(32) NOT NULL ,
   TOTAL_INTEGRAL VARCHAR(32) NOT NULL ,
   MAX_INTEGRAL VARCHAR(32) DEFAULT '0' NOT NULL ,
   OVER_INTEGRAL VARCHAR(32) DEFAULT '0' NOT NULL ,
   FORMULA VARCHAR(1024) NOT NULL ,
   FEE VARCHAR(32) DEFAULT '0' NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 0 NOT NULL 
);
CREATE  INDEX "IQS_JJ_FEE_TASK_ID" ON QS_JJ_FEE (TASK_ID);
CREATE  INDEX "IQS_JJ_FEE_YYYYMM" ON QS_JJ_FEE (YYYYMM);
CREATE  INDEX "IQS_JJ_FEE_CITY" ON QS_JJ_FEE (CITY);
CREATE  INDEX "IQS_JJ_FEE_COUNTY" ON QS_JJ_FEE (COUNTY);
CREATE  INDEX "IQS_JJ_FEE_IS_ENABLE" ON QS_JJ_FEE (IS_ENABLE);
------------------------------------------------

CREATE TABLE QS_JJ_INTEGRAL (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_ID INT NOT NULL ,
   YYYYMM INT NOT NULL ,
   CITY INT NOT NULL ,
   COUNTY INT NOT NULL ,
   CM_ID VARCHAR(32) NOT NULL ,
   RULE_ID INT NOT NULL ,
   RULE_VALUE INT NOT NULL ,
   FORMULA VARCHAR(1024) NOT NULL ,
   INTEGRAL VARCHAR(32) NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 0 NOT NULL 
);
CREATE  INDEX "IQS_JJ_INTEGRAL_TASK_ID" ON QS_JJ_INTEGRAL (TASK_ID);
CREATE  INDEX "IQS_JJ_INTEGRAL_YYYYMM" ON QS_JJ_INTEGRAL (YYYYMM);
CREATE  INDEX "IQS_JJ_INTEGRAL_CITY" ON QS_JJ_INTEGRAL (CITY);
CREATE  INDEX "IQS_JJ_INTEGRAL_COUNTY" ON QS_JJ_INTEGRAL (COUNTY);
CREATE  INDEX "IQS_JJ_INTEGRAL_IS_ENABLE" ON QS_JJ_INTEGRAL (IS_ENABLE);
------------------------------------------------
DROP TABLE QS_JJ_TASK;
CREATE TABLE QS_JJ_TASK (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_MODE SMALLINT NOT NULL ,
   YYYYMM INT NOT NULL ,
   CITY INT NOT NULL ,
   POLICY_ID INT NOT NULL ,
   TASK_STATUS SMALLINT NOT NULL ,
   TASK_RESULT SMALLINT,
   RESULT_MESSAGE CLOB ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   START_TIME TIMESTAMP,
   FINISH_TIME TIMESTAMP,
   IS_ENABLE SMALLINT DEFAULT 0 NOT NULL 
);CREATE  INDEX "IQS_JJ_TASK_YYYYMM" ON QS_JJ_TASK (YYYYMM);
CREATE  INDEX "IQS_JJ_TASK_CITY" ON QS_JJ_TASK (CITY);
CREATE  INDEX "IQS_JJ_TASK_IS_ENABLE" ON QS_JJ_TASK (IS_ENABLE);
------------------------------------------------

CREATE TABLE QS_JJ_TASK_LOG (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_ID INT NOT NULL ,
   CM_ID VARCHAR(32) NOT NULL ,
   LOG_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   LOG_LEVEL SMALLINT DEFAULT 3 NOT NULL ,
   MESSAGE CLOB NOT NULL 
);CREATE  INDEX "IQS_JJ_TASK_LOG_TASK_ID" ON QS_JJ_TASK_LOG (TASK_ID);
------------------------------------------------
--
--           抢盘
-------------------------------------------------------
DROP TABLE QS_QP;
CREATE TABLE QS_QP (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   NAME VARCHAR(256) NOT NULL ,
   LEVEL INT DEFAULT 0 NOT NULL ,
   CITY INT DEFAULT 0 NOT NULL ,
   COUNTY INT DEFAULT 0 NOT NULL ,
   TARGET_IDS VARCHAR(1024) NOT NULL ,
   TEMP_FILE VARCHAR(1024) NOT NULL ,
   CONTENT CLOB,
   FILES CLOB,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   IS_APPROVAL SMALLINT DEFAULT 0 NOT NULL ,
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   APPROVAL_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   APPROVAL_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
------------------------------------------------


CREATE TABLE QS_QP_FEE_CM (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_ID INT NOT NULL ,
   CITY INT NOT NULL ,
   CITY_NAME VARCHAR(32) NOT NULL ,
   COUNTY INT NOT NULL ,
   COUNTY_NAME VARCHAR(32) NOT NULL ,
   CM_ID VARCHAR(32) NOT NULL ,
   CM_NAME VARCHAR(32) NOT NULL ,
   TOTAL_INTEGRAL VARCHAR(32) NOT NULL ,
   TOTAL_FEE VARCHAR(32) DEFAULT '0' NOT NULL ,
   REDUCE_FEE VARCHAR(32) DEFAULT '0' NOT NULL ,
   FEE VARCHAR(32) DEFAULT '0' NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 0 NOT NULL 
);

------------------------------------------------


CREATE TABLE QS_QP_FEE_CT (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_ID INT NOT NULL ,
   CITY INT NOT NULL ,
   CITY_NAME VARCHAR(32) NOT NULL ,
   COUNTY INT NOT NULL ,
   COUNTY_NAME VARCHAR(32) NOT NULL ,
   TOTAL_INTEGRAL VARCHAR(32) NOT NULL ,
   TOTAL_FEE VARCHAR(32) DEFAULT '0' NOT NULL ,
   CM_COUNT INT DEFAULT 0 NOT NULL ,
   PER_FEE VARCHAR(32) DEFAULT '0' NOT NULL ,
   REDUCE_FEE VARCHAR(32) DEFAULT '0' NOT NULL ,
   FEE VARCHAR(32) DEFAULT '0' NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 0 NOT NULL 
);

------------------------------------------------

DROP TABLE QS_QP_TASK;
CREATE TABLE QS_QP_TASK (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_MODE SMALLINT NOT NULL ,
   YYYYMM INT NOT NULL ,
   LEVEL INT DEFAULT 0 NOT NULL ,
   CITY INT NOT NULL ,
   COUNTY INT NOT NULL ,
   POLICY_ID INT NOT NULL ,
   TARGET_IDS VARCHAR(1024) NOT NULL ,
   TEMP_FILE VARCHAR(1024) NOT NULL ,
   OUT_FILE VARCHAR(1024) NOT NULL ,
   TASK_STATUS SMALLINT NOT NULL ,
   TASK_RESULT SMALLINT,
   RESULT_MESSAGE CLOB,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   START_TIME TIMESTAMP,
   FINISH_TIME TIMESTAMP,
   IS_ENABLE SMALLINT DEFAULT 0 NOT NULL 
);

------------------------------------------------

DROP TABLE QS_QP_TASK_LOG;
CREATE TABLE QS_QP_TASK_LOG (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TASK_ID INT NOT NULL ,
   COUNTY INT NOT NULL ,
   CM_ID VARCHAR(32) NOT NULL ,
   LOG_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   LOG_LEVEL SMALLINT DEFAULT 3 NOT NULL ,
   MESSAGE CLOB NOT NULL 
);

------------------------------------------------
--
-- 指标
---------------------------------------------------

CREATE TABLE QS_TARGET (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   TARGET_TYPE_ID INT,
   NAME VARCHAR(256) NOT NULL ,
   CRON VARCHAR(128) NOT NULL ,
   IS_USE SMALLINT,
   FILTER_ID INT,
   CN_FIELD_NAME VARCHAR(128) NOT NULL ,
   EN_FIELD_NAME VARCHAR(128) NOT NULL ,
   FORMULA VARCHAR(256) NOT NULL ,
   REMARK VARCHAR(1024),
   FILES CLOB,
   CITY INT DEFAULT 0 NOT NULL ,
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
------------------------------------------------

CREATE TABLE QS_TARGET_TYPE (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   PARENT_ID INT,
   NAME VARCHAR(128) NOT NULL ,
   REMARK VARCHAR(256)
);
------------------------------------------------


CREATE TABLE QS_TARGET_CM (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   YYYYMM INT NOT NULL ,
   CITY INT NOT NULL ,
   COUNTY INT NOT NULL ,
   CM_ID VARCHAR(32) NOT NULL ,
   CM_NAME VARCHAR(32) NOT NULL ,
   TARGET_ID INT NOT NULL ,
   TARGET_FIELD VARCHAR(32) NOT NULL ,
   TARGET_VALUE VARCHAR(32) NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
CREATE  INDEX "IQS_TARGET_CM_YYYYMM" ON QS_TARGET_CM (YYYYMM);
CREATE  INDEX "IQS_TARGET_CM_CITY" ON QS_TARGET_CM (CITY);
CREATE  INDEX "IQS_TARGET_CM_COUNTY" ON QS_TARGET_CM (COUNTY);
------------------------------------------------


CREATE TABLE QS_TARGET_CT (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   YYYYMM INT NOT NULL ,
   CITY INT NOT NULL ,
   COUNTY INT NOT NULL ,
   COUNTY_NAME VARCHAR(32) NOT NULL ,
   TARGET_ID INT NOT NULL ,
   TARGET_FIELD VARCHAR(32) NOT NULL ,
   TARGET_VALUE VARCHAR(32) NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
CREATE  INDEX "IQS_TARGET_CT_YYYYMM" ON QS_TARGET_CT (YYYYMM);
CREATE  INDEX "IQS_TARGET_CT_CITY" ON QS_TARGET_CT (CITY);
CREATE  INDEX "IQS_TARGET_CT_COUNTY" ON QS_TARGET_CT (COUNTY);
------------------------------------------------


CREATE TABLE QS_TARGET_GP (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   YYYYMM INT NOT NULL ,
   CITY INT NOT NULL ,
   GROUP_ID VARCHAR(32) NOT NULL ,
   GROUP_NAME VARCHAR(32) NOT NULL ,
   TARGET_ID INT NOT NULL ,
   TARGET_FIELD VARCHAR(32) NOT NULL ,
   TARGET_VALUE VARCHAR(32) NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);
CREATE  INDEX "IQS_TARGET_GP_YYYYMM" ON QS_TARGET_GP (YYYYMM);
CREATE  INDEX "IQS_TARGET_GP_CITY" ON QS_TARGET_GP (CITY);
CREATE  INDEX "IQS_TARGET_GP_GROUP_ID" ON QS_TARGET_GP (GROUP_ID);
------------------------------------------------


CREATE TABLE QS_CM (
   ID INT NOT NULL  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 CACHE 20),
   BOSS_ID VARCHAR(128) NOT NULL ,
   ESOP_ID VARCHAR(128),
   EIP_ID VARCHAR(128),
   MIS_ID VARCHAR(128),
   FULL_NAME VARCHAR(128) NOT NULL ,
   SEX VARCHAR(8),
   EDUCATION VARCHAR(128) NOT NULL ,
   ID_CODE VARCHAR(32),
   CITY INT DEFAULT 0 NOT NULL ,
   CITY_NAME VARCHAR(128) NOT NULL ,
   COUNTY INT DEFAULT 0 NOT NULL ,
   COUNTY_NAME VARCHAR(128) NOT NULL ,
   JOB_TYPE VARCHAR(128),
   JOB_ROLE_TYPE VARCHAR(128),
   POST_LEVEL INT DEFAULT 0 NOT NULL ,
   POST_BEGIN INT DEFAULT 0 NOT NULL ,
   POST_WAGE INT DEFAULT 0 NOT NULL ,
   PERFORMANCE INT DEFAULT 0 NOT NULL ,
   IS_JJ SMALLINT DEFAULT 1 NOT NULL ,
   IS_QP SMALLINT DEFAULT 1 NOT NULL ,
   IS_FX SMALLINT DEFAULT 1 NOT NULL ,
   IS_ENABLE SMALLINT DEFAULT 1 NOT NULL ,
   REMARK VARCHAR(1024),
   CREATE_UID INT DEFAULT 0 NOT NULL ,
   UPDATE_UID INT DEFAULT 0 NOT NULL ,
   CREATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
   UPDATE_TIME TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL 
);

